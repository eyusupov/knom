@prefix mf: <http://www.w3.org/2001/sw/DataAccess/tests/test-manifest#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix : <#>.

[] a mf:Manifest ;
  mf:name "Tests for builtins";
  mf:entries (
    [
      mf:name "math:greaterThan with a false result";
      mf:action <builtins/math_greaterthan_false.n3>;
      mf:result <builtins/math_greaterthan_false-ref.n3>
    ]
    [
      mf:name "math:greaterThan with a true result";
      mf:action <builtins/math_greaterthan_true.n3>;
      mf:result <builtins/math_greaterthan_true-ref.n3>
    ]
    [
      mf:name "math:lessThan with a false result";
      mf:action <builtins/math_lessthan_false.n3>;
      mf:result <builtins/math_lessthan_false-ref.n3>
    ]
    [
      mf:name "math:lessThan with a true result";
      mf:action <builtins/math_lessthan_true.n3>;
      mf:result <builtins/math_lessthan_true-ref.n3>
    ]
    [
      mf:name "math:notGreaterThan with a false result";
      mf:action <builtins/math_notgreaterthan_false.n3>;
      mf:result <builtins/math_notgreaterthan_false-ref.n3>
    ]
    [
      mf:name "math:notGreaterThan with a true result";
      mf:action <builtins/math_notgreaterthan_true.n3>;
      mf:result <builtins/math_notgreaterthan_true-ref.n3>
    ]
    [
      mf:name "math:notLessThan with a false result";
      mf:action <builtins/math_notlessthan_false.n3>;
      mf:result <builtins/math_notlessthan_false-ref.n3>
    ]
    [
      mf:name "math:notLessThan with a true result";
      mf:action <builtins/math_notlessthan_true.n3>;
      mf:result <builtins/math_notlessthan_true-ref.n3>
    ]
    [
      mf:name "string:ord with char output";
      mf:action <builtins/string-ord-char-output.n3>;
      mf:result <builtins/string-ord-char-output-ref.n3>
    ]
    [
      mf:name "string:ord comparison";
      mf:action <builtins/string-ord-compare.n3>;
      mf:result <builtins/string-ord-compare-ref.n3>
    ]
    [
      mf:name "string:ord with literal as input";
      mf:action <builtins/string-ord-literal.n3>;
      mf:result <builtins/string-ord-literal-ref.n3>
    ]
    [
      mf:name "string:ord with variable as input";
      mf:action <builtins/string-ord-variable.n3>;
      mf:result <builtins/string-ord-variable-ref.n3>
    ]
    [
      mf:name "log:forAllIn with current document";
      mf:action <builtins/log-forallin-current-doc.n3>;
      mf:result <builtins/log-forallin-current-doc-ref.n3>
    ]
    [
      mf:name "log:forAllIn with current document is false";
      mf:action <builtins/log-forallin-current-doc-false.n3>;
      mf:result <builtins/log-forallin-current-doc-false-ref.n3>
    ]
    [
      mf:name "log:forAllIn scoped";
      mf:action <builtins/log-forallin-scoped.n3>;
      mf:result <builtins/log-forallin-scoped-ref.n3>
    ]
    [
      mf:name "log:forAllIn scoped is false";
      mf:action <builtins/log-forallin-scoped-false.n3>;
      mf:result <builtins/log-forallin-scoped-false-ref.n3>
    ]
    [
      mf:name "log:includes with current document";
      mf:action <builtins/log-includes-current-doc.n3>;
      mf:result <builtins/log-includes-current-doc-ref.n3>
    ]
    [
      mf:name "log:includes with the formula";
      mf:action <builtins/log-includes-formula.n3>;
      mf:result <builtins/log-includes-formula-ref.n3>
    ]
    [
      mf:name "log:includes with multiple vars";
      mf:action <builtins/log-includes-current-doc-multiple-vars.n3>;
      mf:result <builtins/log-includes-current-doc-multiple-vars-ref.n3>
    ]
  ).

